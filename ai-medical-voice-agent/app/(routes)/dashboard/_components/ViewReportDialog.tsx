"use client";

import React from "react";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { SessionDetails } from "../medical-agent/[sessionId]/page";

type MedicalReport = {
  chiefComplaint?: string;
  summary?: string;
  symptoms?: string[];
  duration?: string;
  severity?: "mild" | "moderate" | "severe";
  medicationsMentioned?: string[];
  recommendations?: string[];
};

type Props = {
  record: SessionDetails;
};

function ViewReportDialog({ record }: Props) {
  const report = (record.report ?? {}) as MedicalReport;

  return (
    <Dialog>
      <DialogTrigger>
        <Button variant="link" size="sm">View Report</Button>
      </DialogTrigger>

      <DialogContent className="max-w-3xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="text-center text-blue-600 text-2xl font-bold mb-4">
            ðŸ©º Medical AI Voice Agent Report
          </DialogTitle>

          <DialogDescription asChild>
            <div className="space-y-4 text-sm text-gray-700">

              {/* Session Info */}
              <section>
                <h2 className="text-blue-500 font-semibold text-lg mb-2">Session Info</h2>
                <div className="grid grid-cols-2 gap-3">
                  <p><strong>Doctor:</strong> {record.selectedDoctor?.specialist ?? "N/A"}</p>
                  <p><strong>User:</strong> Anonymous</p>
                  <p><strong>Consulted On:</strong> {record.createdon ? new Date(record.createdon).toLocaleString("en-IN", {
                    dateStyle: "long",
                    timeStyle: "short"
                  }) : "N/A"}</p>
                  <p><strong>Agent:</strong> {record.selectedDoctor?.agentName ?? "AI Assistant"}</p>
                </div>
              </section>

              {/* Chief Complaint */}
              <section>
                <h2 className="text-blue-500 font-semibold text-lg mb-2">Chief Complaint</h2>
                <p>{report.chiefComplaint || "Not specified"}</p>
              </section>

              {/* Summary */}
              <section>
                <h2 className="text-blue-500 font-semibold text-lg mb-2">Summary</h2>
                <p>{report.summary || "Not available"}</p>
              </section>

              {/* Symptoms */}
              <section>
                <h2 className="text-blue-500 font-semibold text-lg mb-2">Symptoms</h2>
                <ul className="list-disc list-inside">
                  {report.symptoms?.length ? (
                    report.symptoms.map((symptom, idx) => (
                      <li key={idx}>{symptom}</li>
                    ))
                  ) : (
                    <li>None specified</li>
                  )}
                </ul>
              </section>

              {/* Duration & Severity */}
              <section>
                <h2 className="text-blue-500 font-semibold text-lg mb-2">Duration & Severity</h2>
                <div className="grid grid-cols-2 gap-3">
                  <p><strong>Duration:</strong> {report.duration || "Not specified"}</p>
                  <p><strong>Severity:</strong> {report.severity || "Unknown"}</p>
                </div>
              </section>

              {/* Medications */}
              <section>
                <h2 className="text-blue-500 font-semibold text-lg mb-2">Medications Mentioned</h2>
                <ul className="list-disc list-inside">
                  {report.medicationsMentioned?.length ? (
                    report.medicationsMentioned.map((med, idx) => (
                      <li key={idx}>{med}</li>
                    ))
                  ) : (
                    <li>None mentioned</li>
                  )}
                </ul>
              </section>

              {/* Recommendations */}
              <section>
                <h2 className="text-blue-500 font-semibold text-lg mb-2">Recommendations</h2>
                <ul className="list-disc list-inside">
                  {report.recommendations?.length ? (
                    report.recommendations.map((rec, idx) => (
                      <li key={idx}>{rec}</li>
                    ))
                  ) : (
                    <li>No specific recommendations</li>
                  )}
                </ul>
              </section>

              {/* Footer */}
              <section className="pt-4 text-xs text-gray-500 border-t">
                <p>This report was generated by an AI Medical Assistant for informational purposes only.</p>
              </section>

            </div>
          </DialogDescription>
        </DialogHeader>
      </DialogContent>
    </Dialog>
  );
}

export default ViewReportDialog;
